basePath: /api/v1
definitions:
  dtos.CreateUserRequest:
    description: User account information for registration.
    properties:
      email:
        example: john@email.com
        type: string
      lastname:
        example: Doe
        type: string
      name:
        example: John
        type: string
      nickname:
        example: Johny1
        type: string
      password:
        example: mySuperPass
        minLength: 8
        type: string
      phone:
        example: 79990001122
        type: integer
    required:
    - email
    - lastname
    - name
    - nickname
    - password
    - phone
    type: object
  dtos.CreateUserResponse:
    description: Information about the user's account after successful registration.
    properties:
      created_at:
        example: "2006-01-02T03:04:05.5141511+03:00"
        type: string
      user_type:
        example: USER
        type: string
      uuid:
        example: 16763be4-6022-406e-a950-fcd5018633ca
        type: string
    type: object
  dtos.SignInRequest:
    description: User credentials.
    properties:
      email:
        example: john@email.com
        type: string
      password:
        example: mySuperPass
        minLength: 8
        type: string
      phone:
        example: 79991112233
        type: integer
    required:
    - password
    type: object
  dtos.SignInResponse:
    description: JWT.
    properties:
      jwt:
        type: string
    type: object
  dtos.UpdateUserPasswordRequest:
    description: New user password.
    properties:
      password:
        example: mySuperPass
        minLength: 8
        type: string
    required:
    - password
    type: object
  httperrors.authErrorResponse:
    description: Invalid credentials
    properties:
      error:
        example: Invalid credentials
        type: string
    type: object
  httperrors.badRequestErrorResponse:
    description: Bad request
    properties:
      error:
        example: Bad request
        type: string
    type: object
  httperrors.internalServerErrorResponse:
    description: Internal server error
    properties:
      error:
        example: Internal server error
        type: string
    type: object
  httperrors.validationDTOErrorResponse:
    description: Validation error
    properties:
      error:
        example: Some field failed the uniqueness check
        type: string
    type: object
  httperrors.validationErrorResponse:
    description: JSON validate error
    properties:
      error:
        example: Bad json in request
        type: string
      fields:
        example:
        - email:required
        items:
          type: string
        type: array
    type: object
host: localhost:8080
info:
  contact: {}
  description: Auth service
  title: IstokAuth
  version: 1.0.0
paths:
  /auth/refresh:
    get:
      description: Get new refresh and access tokens by refresh token cookie
      produces:
      - application/json
      responses:
        "200":
          description: Json with JWT, refresh token in coockie
          schema:
            $ref: '#/definitions/dtos.SignInResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/httperrors.badRequestErrorResponse'
        "401":
          description: Invalid user
          schema:
            $ref: '#/definitions/httperrors.authErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/httperrors.internalServerErrorResponse'
      summary: Refresh tokens
      tags:
      - Authorization
  /auth/signin:
    post:
      consumes:
      - application/json
      description: User authorization
      parameters:
      - description: Account information for signin
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dtos.SignInRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Json with JWT, refresh token in coockie
          schema:
            $ref: '#/definitions/dtos.SignInResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/httperrors.badRequestErrorResponse'
        "401":
          description: Invalid credentials
          schema:
            $ref: '#/definitions/httperrors.authErrorResponse'
        "422":
          description: Bad json in request
          schema:
            $ref: '#/definitions/httperrors.validationErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/httperrors.internalServerErrorResponse'
      summary: User authorization
      tags:
      - Authorization
  /auth/signup:
    post:
      consumes:
      - application/json
      description: Registering a new user
      parameters:
      - description: Account information for signup
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dtos.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Information about the user's account after successful registration
          schema:
            $ref: '#/definitions/dtos.CreateUserResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/httperrors.badRequestErrorResponse'
        "409":
          description: A user already exists
          schema:
            $ref: '#/definitions/httperrors.validationDTOErrorResponse'
        "422":
          description: Bad json in request
          schema:
            $ref: '#/definitions/httperrors.validationErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/httperrors.internalServerErrorResponse'
      summary: Registering a new user
      tags:
      - Authorization
  /user/update-password:
    put:
      consumes:
      - application/json
      description: User update password
      parameters:
      - description: New password
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dtos.UpdateUserPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/httperrors.badRequestErrorResponse'
        "401":
          description: Invalid token
          schema:
            $ref: '#/definitions/httperrors.authErrorResponse'
        "422":
          description: Bad json in request
          schema:
            $ref: '#/definitions/httperrors.validationErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/httperrors.internalServerErrorResponse'
      security:
      - BearerAuth: []
      summary: User update password
      tags:
      - User
securityDefinitions:
  BearerAuth:
    description: Enter the token with the `Bearer ` prefix, e.g. "Bearer abcde12345"
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
