{
    "swagger": "2.0",
    "info": {
        "description": "Auth service",
        "title": "IstokAuth",
        "contact": {},
        "version": "1.0.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/auth/refresh": {
            "get": {
                "description": "Get new refresh and access tokens by refresh token cookie",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization"
                ],
                "summary": "Refresh tokens",
                "responses": {
                    "200": {
                        "description": "Json with JWT, refresh token in coockie",
                        "schema": {
                            "$ref": "#/definitions/dtos.SignInResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/httperrors.badRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid user",
                        "schema": {
                            "$ref": "#/definitions/httperrors.authErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/httperrors.internalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/signin": {
            "post": {
                "description": "User authorization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization"
                ],
                "summary": "User authorization",
                "parameters": [
                    {
                        "description": "Account information for signin",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.SignInRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Json with JWT, refresh token in coockie",
                        "schema": {
                            "$ref": "#/definitions/dtos.SignInResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/httperrors.badRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/httperrors.authErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Bad json in request",
                        "schema": {
                            "$ref": "#/definitions/httperrors.validationErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/httperrors.internalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/signup": {
            "post": {
                "description": "Registering a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization"
                ],
                "summary": "Registering a new user",
                "parameters": [
                    {
                        "description": "Account information for signup",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Information about the user's account after successful registration",
                        "schema": {
                            "$ref": "#/definitions/dtos.CreateUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/httperrors.badRequestErrorResponse"
                        }
                    },
                    "409": {
                        "description": "A user already exists",
                        "schema": {
                            "$ref": "#/definitions/httperrors.validationDTOErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Bad json in request",
                        "schema": {
                            "$ref": "#/definitions/httperrors.validationErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/httperrors.internalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/update-password": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "User update password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "User update password",
                "parameters": [
                    {
                        "description": "New password",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.UpdateUserPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/httperrors.badRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid token",
                        "schema": {
                            "$ref": "#/definitions/httperrors.authErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Bad json in request",
                        "schema": {
                            "$ref": "#/definitions/httperrors.validationErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/httperrors.internalServerErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dtos.CreateUserRequest": {
            "description": "User account information for registration.",
            "type": "object",
            "required": [
                "email",
                "lastname",
                "name",
                "nickname",
                "password",
                "phone"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "john@email.com"
                },
                "lastname": {
                    "type": "string",
                    "example": "Doe"
                },
                "name": {
                    "type": "string",
                    "example": "John"
                },
                "nickname": {
                    "type": "string",
                    "example": "Johny1"
                },
                "password": {
                    "type": "string",
                    "minLength": 8,
                    "example": "mySuperPass"
                },
                "phone": {
                    "type": "integer",
                    "example": 79990001122
                }
            }
        },
        "dtos.CreateUserResponse": {
            "description": "Information about the user's account after successful registration.",
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2006-01-02T03:04:05.5141511+03:00"
                },
                "user_type": {
                    "type": "string",
                    "example": "USER"
                },
                "uuid": {
                    "type": "string",
                    "example": "16763be4-6022-406e-a950-fcd5018633ca"
                }
            }
        },
        "dtos.SignInRequest": {
            "description": "User credentials.",
            "type": "object",
            "required": [
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "john@email.com"
                },
                "password": {
                    "type": "string",
                    "minLength": 8,
                    "example": "mySuperPass"
                },
                "phone": {
                    "type": "integer",
                    "example": 79991112233
                }
            }
        },
        "dtos.SignInResponse": {
            "description": "JWT.",
            "type": "object",
            "properties": {
                "jwt": {
                    "type": "string"
                }
            }
        },
        "dtos.UpdateUserPasswordRequest": {
            "description": "New user password.",
            "type": "object",
            "required": [
                "password"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "minLength": 8,
                    "example": "mySuperPass"
                }
            }
        },
        "httperrors.authErrorResponse": {
            "description": "Invalid credentials",
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Invalid credentials"
                }
            }
        },
        "httperrors.badRequestErrorResponse": {
            "description": "Bad request",
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Bad request"
                }
            }
        },
        "httperrors.internalServerErrorResponse": {
            "description": "Internal server error",
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Internal server error"
                }
            }
        },
        "httperrors.validationDTOErrorResponse": {
            "description": "Validation error",
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Some field failed the uniqueness check"
                }
            }
        },
        "httperrors.validationErrorResponse": {
            "description": "JSON validate error",
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Bad json in request"
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "email:required"
                    ]
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Enter the token with the `Bearer ` prefix, e.g. \"Bearer abcde12345\"",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}